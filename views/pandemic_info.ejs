<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        html,
        body {
            margin: 0;
        }

        .graph {
            width: 80%;
            /* height: 100px; */
        }
        #chartdiv{
            height: 55%;
        }
    </style>
</head>

<body>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.bundle.min.js"></script>

    <div class="graph" id="line_graph">
        <canvas id="line-chart" width="40" height="50"></canvas>
    </div>


    <div class="graph" id="bar_graph">
        <canvas id="bar-chart" width="40" height="50"></canvas>
    </div>

    <script>

        var data = null;
        var days = []
        var infected_num = []
        async function getLineData() {
            console.log("doing")
            let get_data = await $.ajax({
                type: "get",
                url: "/parse_covid_line_data",

                dataType: "json",
                success: function (response) {
                    data = response
                    console.log(data)

                    for (var i in data) {
                        console.log(data[i]._id)
                        days.push(data[i]._id.substring(5))
                        console.log(data[i].count)
                        infected_num.push(data[i].count)
                    }
                    return


                }
            });
        }

        //line chart
        async function drawLineGraph() {
            new Chart(document.getElementById("line-chart"), {
                type: 'line',
                data: {
                    //days
                    labels: days,

                    datasets: [{
                        data: infected_num,
                        label: "COVID NEWLY CONFIRMED CASES",
                        borderColor: "#3e95cd",
                        fill: true
                    },
                        // {
                        // 	data: [86, 114, 106, 106, 107, 111, 133, 221, 783, 2478],
                        // 	label: "Coupons Redeemed",
                        // 	borderColor: "#3e95cd",
                        // 	fill: false
                        // }, 

                    ]
                },
                options: {
                    title: {
                        display: true,
                        text: 'User Record'
                    }
                }
            });

        }




        var section = [];
        var infected_num_section = [];
        async function getBarData() {
            console.log("doing")
            let get_data = await $.ajax({
                type: "get",
                url: "/parse_covid_bar_data",

                dataType: "json",
                success: function (response) {
                    data = response
                    console.log(data)

                    for (var i in data) {
                        console.log(data[i]._id)
                        section.push(data[i]._id)
                        console.log(data[i].count)
                        infected_num_section.push(data[i].count)
                    }
                    return


                }
            });
        }

        async function drawBarGraph() {

            //radar chart
            new Chart(document.getElementById("bar-chart"), {
                type: 'polarArea',
                data: {
                    labels: section,
                    datasets: [
                        {
                            label: "Cases",

                            backgroundColor: "rgba(179,181,198,0.6)",
                            borderColor: "rgba(227,71,43,1)",

                            data: infected_num_section
                        }
                    ]
                },
                options: {
                    title: {
                        display: true,
                        // text: 'Distribution in % of world population'
                    }
                }
            });

        }






















        getLineData().then(() => {
            drawLineGraph()
        }).then(() => {
            getBarData().then(() => {
                drawBarGraph()
            })
        })















        // drawGraph()
        $(".choice_btn").click((e) => {
            $(e.target.parentNode.parentNode).css("display", "none")
            $(e.target.parentNode.parentNode).css("height", "0")
            $(e.target.parentNode.parentNode).remove()
        })



    </script>





    <!--                                               -->

    <script src="https://www.amcharts.com/lib/4/core.js"></script>
    <script src="https://www.amcharts.com/lib/4/maps.js"></script>
    <!-- <script src="/static/js/jsonformatter.js"></script> -->
    
    
    
    <div id="chartdiv"></div>





    <script>




        var chart = am4core.create("chartdiv", am4maps.MapChart);

        // Set map definition
        chart.geodataSource.url = "/static/BC-HA-map.min.json"


        // Set projection
        chart.projection = new am4maps.projections.Mercator();

        // Create map polygon series
        var polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());

        // Make map load polygon (like country names) data from GeoJSON
        polygonSeries.useGeodata = true;

        // Configure series
        var polygonTemplate = polygonSeries.mapPolygons.template;
        polygonTemplate.tooltipText = "{HA_Title}";
        polygonTemplate.fill = am4core.color("#74B266");

        // Create hover state and set alternative fill color
        var hs = polygonTemplate.states.create("hover");
        hs.properties.fill = am4core.color("#367B25");

        // Add zoom control
        chart.zoomControl = new am4maps.ZoomControl();

// console.log(JSON.stringify(BC))

    </script>


















</body>

</html>